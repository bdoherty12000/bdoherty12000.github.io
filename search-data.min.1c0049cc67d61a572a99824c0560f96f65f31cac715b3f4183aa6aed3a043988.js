(function(){const pages=[{"idx":0,"href":"/posts/post-one/","title":"Post One","content":""},{"idx":1,"href":"/posts/post-two/","title":"Post Two","content":""},{"idx":2,"href":"/docs/","title":"Docs","content":""},{"idx":3,"href":"/docs/introduction-to-python/","title":"Introduction to Python","content":" Introduction What can Python do?  Python can be used on a server to create web applications. Python can be used alongside software to create workflows. Python can connect to database systems. It can also read and modify files. Python can be used to handle big data and perform complex mathematics. Python can be used for rapid prototyping, or for production-ready software development.  Python Python is a simple language with straightforward syntax. There are two major Python versions; Python 2 and Python 3. This tutorial uses Python 3 because it is the most up-to-date and supports newer features. For example, one difference between Python 2 and 3 is the print statement. In Python 2, the “print” statement is not a function, and therefore it is invoked without parentheses. However, in Python 3, it is a function and must be invoked with parentheses and also includes a newline, unlike in C. To print a string in Python 3, just write:\nprint(\u0026quot;Hello World\u0026quot;)  Indentation Python uses indentation for blocks, instead of curly braces. Both tabs and spaces are supported, but the standard indentation requires standard Python code to use four spaces. For example:\nx = 1 if x == 1: print(\u0026quot;x is 1.\u0026quot;) # indented four spaces  Comments Comments provides useful information to help the reader understand source code. Comments are helpful to someone maintaining or enhancing your code when you are no longer around to answer questions about it.\nThere are two types of comment in Python:\nSingle line comments The hash symbol # comments out a single line. Single line comments start with a hashtag symbol with no white spaces (#) and last until the end of the line. If the comment exceeds one line then a hashtag is needed on the next line to continue the comment. Single line comments are useful for providing short explanations for variables, function declarations, and expressions. The code snippet demonstrates a single line comment:\n# This is a comment # Print “The Data Faculty !” to the console print(\u0026quot;The Data Faculty !\u0026quot;)  Multi-line comments Python multi-line comments are a piece of text enclosed in a delimiter (\u0026ldquo;\u0026rdquo;\u0026ldquo;) on each end of the comment. Again there should be no white space between delimiter (\u0026ldquo;\u0026rdquo;\u0026ldquo;). They are useful when the comment text does not fit into one line and needs to span across lines. See the following code snippet demonstrating a multi-line comment:\n\u0026quot;\u0026quot;\u0026quot; This is a multiline comment in Python that spans several lines. A Computer Science portal for geeks. It contains well written, well thought and well-explained computer science and programming articles, quizzes and more. … \u0026quot;\u0026quot;\u0026quot; print(\u0026quot;The Data Faculty\u0026quot;)  "},{"idx":4,"href":"/docs/python-get-started/","title":"Introduction to Python","content":" Introduction Python Python is a simple language with straightforward syntax. There are two major Python versions; Python 2 and Python 3. This tutorial uses Python 3 because it is the most up-to-date and supports newer features. For example, one difference between Python 2 and 3 is the print statement. In Python 2, the “print” statement is not a function, and therefore it is invoked without parentheses. However, in Python 3, it is a function and must be invoked with parentheses and also includes a newline, unlike in C. To print a string in Python 3, just write:\nprint(\u0026quot;Hello World\u0026quot;)  Indentation Python uses indentation for blocks, instead of curly braces. Both tabs and spaces are supported, but the standard indentation requires standard Python code to use four spaces. For example:\nx = 1 if x == 1: print(\u0026quot;x is 1.\u0026quot;) # indented four spaces  Comments Comments provides useful information to help the reader understand source code. Comments are helpful to someone maintaining or enhancing your code when you are no longer around to answer questions about it.\nThere are two types of comment in Python:\nSingle line comments The hash symbol # comments out a single line. Single line comments start with a hashtag symbol with no white spaces (#) and last until the end of the line. If the comment exceeds one line then a hashtag is needed on the next line to continue the comment. Single line comments are useful for providing short explanations for variables, function declarations, and expressions. The code snippet demonstrates a single line comment:\n# This is a comment # Print “The Data Faculty !” to the console print(\u0026quot;The Data Faculty !\u0026quot;)  Multi-line comments Python multi-line comments are a piece of text enclosed in a delimiter (\u0026ldquo;\u0026rdquo;\u0026ldquo;) on each end of the comment. Again there should be no white space between delimiter (\u0026ldquo;\u0026rdquo;\u0026ldquo;). They are useful when the comment text does not fit into one line and needs to span across lines. See the following code snippet demonstrating a multi-line comment:\n\u0026quot;\u0026quot;\u0026quot; This is a multiline comment in Python that spans several lines. A Computer Science portal for geeks. It contains well written, well thought and well-explained computer science and programming articles, quizzes and more. … \u0026quot;\u0026quot;\u0026quot; print(\u0026quot;The Data Faculty\u0026quot;)  "},{"idx":5,"href":"/posts/","title":"Posts","content":""},{"idx":6,"href":"/docs/python-functions/","title":"Python Functions","content":" Python Functions You\u0026rsquo;ll learn how to use functions, methods, and packages to efficiently leverage the code that brilliant Python developers have written. The goal is to reduce the amount of code you need to solve challenging problems!\nFunctions There are a number of rules governing the naming of variables:\n Variable names cannot start with a number There cannot be any spaces in a variable name Reserved words cannot be used in variable names  Create a list The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Subsetting Lists Python has five standard data types.\nNumber String List Tuple Dictionary  Slicing Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Subsetting Lists Replacing List Elements Extending a List Deleting List Elements "},{"idx":7,"href":"/docs/python-numbers/","title":"Python Functions","content":" Python Functions You\u0026rsquo;ll learn how to use functions, methods, and packages to efficiently leverage the code that brilliant Python developers have written. The goal is to reduce the amount of code you need to solve challenging problems!\nFunctions There are a number of rules governing the naming of variables:\n Variable names cannot start with a number There cannot be any spaces in a variable name Reserved words cannot be used in variable names  Create a list The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Subsetting Lists Python has five standard data types.\nNumber String List Tuple Dictionary  Slicing Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Subsetting Lists Replacing List Elements Extending a List Deleting List Elements "},{"idx":8,"href":"/docs/python-syntax/","title":"Python Functions","content":" Python Functions You\u0026rsquo;ll learn how to use functions, methods, and packages to efficiently leverage the code that brilliant Python developers have written. The goal is to reduce the amount of code you need to solve challenging problems!\nFunctions There are a number of rules governing the naming of variables:\n Variable names cannot start with a number There cannot be any spaces in a variable name Reserved words cannot be used in variable names  Create a list The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Subsetting Lists Python has five standard data types.\nNumber String List Tuple Dictionary  Slicing Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Subsetting Lists Replacing List Elements Extending a List Deleting List Elements "},{"idx":9,"href":"/docs/python-lists/","title":"Python Lists","content":" Python Lists Learn to store, access, and manipulate data in lists: the first step toward efficiently working with huge amounts of data.\nWhat are lists? There are a number of rules governing the naming of variables:\n Variable names cannot start with a number There cannot be any spaces in a variable name Reserved words cannot be used in variable names  Create a list The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Subsetting Lists Python has five standard data types.\nNumber String List Tuple Dictionary  Slicing Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Subsetting Lists Replacing List Elements Extending a List Deleting List Elements "},{"idx":10,"href":"/docs/python-numpy/","title":"Python Lists","content":" Python Lists Learn to store, access, and manipulate data in lists: the first step toward efficiently working with huge amounts of data.\nWhat are lists? There are a number of rules governing the naming of variables:\n Variable names cannot start with a number There cannot be any spaces in a variable name Reserved words cannot be used in variable names  Create a list The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Subsetting Lists Python has five standard data types.\nNumber String List Tuple Dictionary  Slicing Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Subsetting Lists Replacing List Elements Extending a List Deleting List Elements "},{"idx":11,"href":"/","title":"The Data Faculty","content":" The Data Faculty Astris ipse furtiva Est in vagis et Pittheus tu arge accipiter regia iram vocatur nurus. Omnes ut olivae sensit arma sorori deducit, inesset crudus, ego vetuere aliis, modo arsit? Utinam rapta fiducia valuere litora adicit cursu, ad facies\r\rSuis quot vota Ea furtique risere fratres edidit terrae magis. Colla tam mihi tenebat: miseram excita suadent es pecudes iam. Concilio quam velatus posset ait quod nunc! Fragosis suae dextra geruntur functus vulgata.\r\r\rTempora nisi nunc Lorem markdownum emicat gestu. Cannis sol pressit ducta. Est Idaei, tremens ausim se tutaeque, illi ulnis hausit, sed, lumina cutem. Quae avis sequens!\n"},{"idx":12,"href":"/docs/python-loop/","title":"Variables and Types","content":" Variables and Types Variables are reserved memory locations used to store values. Python has several basic data types that behave in ways that are similar to other programming languages. You do not need to declare variables before using them or declare their type. Every variable in Python is an object. Variables can hold any value and are case-sensitive. This tutorial will go over a few basic types of variables.\nVariable Names in Python There are a number of rules governing the naming of variables:\n Variable names cannot start with a number There cannot be any spaces in a variable name Reserved words cannot be used in variable names  Variable Assignment The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Standard Data Types Python has five standard data types.\nNumber String List Tuple Dictionary  Python Numbers Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Python Strings A string is a sequence of characters. Strings are created by enclosing a sequence of characters in single or double quotes. Strings are immutable i.e. they cannot be changed once they\u0026rsquo;ve been created. They can, however, have characters or other strings added to them.\nSubsets of strings can be extracted using the slice operator []. String indices start at 0 to string length - 1.\nstr[0] # Selects first character of the string str[2:5] # Selects characters from the 3rd to the 5th str[2:] # Selects characters from the 3rd until the end str + \u0026quot;TEST\u0026quot; # Concatenates two strings  Python Lists Lists are created using square brackets.\nmyList = ['apple', 'orange', 'pear']  Python Tuples Tuples are created using parentheses and are immutable i.e. they can\u0026rsquo;t be modified once they are assigned.\nmyTuple = (1, 2, 3)  Python Dictionaries Dictionaries are made up of a key and a value. They are created as follows:\nmyDict = {'Tom':4, 'Pat': 4, 'John': 7}  Python Sets A Set is unordered data type that is mutable, iterable, and has no duplicate elements and echoes the classical mathematical concept of a set.\nmySet = set([\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;])  Booleans Python implements all the usual operators associated with Boolean logic, but uses words rather than symbols\nt = True # Assigning True to t f = False # Assigning False to f t and f # Logical AND t or f # Logical OR not f # Logical NOT  Python Comments The hash symbol # comments out a single line. \u0026ldquo;\u0026rdquo;\u0026rdquo; Triple quotes allow multiple lines to be commented out. These are also known as docstrings. \u0026ldquo;\u0026rdquo;\u0026rdquo;\n"},{"idx":13,"href":"/docs/python-operators/","title":"Variables and Types","content":" Variables and Types Variables are reserved memory locations used to store values. Python has several basic data types that behave in ways that are similar to other programming languages. You do not need to declare variables before using them or declare their type. Every variable in Python is an object. Variables can hold any value and are case-sensitive. This tutorial will go over a few basic types of variables.\nVariable Names in Python There are a number of rules governing the naming of variables:\n Variable names cannot start with a number There cannot be any spaces in a variable name Reserved words cannot be used in variable names  Variable Assignment The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Standard Data Types Python has five standard data types.\nNumber String List Tuple Dictionary  Python Numbers Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Python Strings A string is a sequence of characters. Strings are created by enclosing a sequence of characters in single or double quotes. Strings are immutable i.e. they cannot be changed once they\u0026rsquo;ve been created. They can, however, have characters or other strings added to them.\nSubsets of strings can be extracted using the slice operator []. String indices start at 0 to string length - 1.\nstr[0] # Selects first character of the string str[2:5] # Selects characters from the 3rd to the 5th str[2:] # Selects characters from the 3rd until the end str + \u0026quot;TEST\u0026quot; # Concatenates two strings  Python Lists Lists are created using square brackets.\nmyList = ['apple', 'orange', 'pear']  Python Tuples Tuples are created using parentheses and are immutable i.e. they can\u0026rsquo;t be modified once they are assigned.\nmyTuple = (1, 2, 3)  Python Dictionaries Dictionaries are made up of a key and a value. They are created as follows:\nmyDict = {'Tom':4, 'Pat': 4, 'John': 7}  Python Sets A Set is unordered data type that is mutable, iterable, and has no duplicate elements and echoes the classical mathematical concept of a set.\nmySet = set([\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;])  Booleans Python implements all the usual operators associated with Boolean logic, but uses words rather than symbols\nt = True # Assigning True to t f = False # Assigning False to f t and f # Logical AND t or f # Logical OR not f # Logical NOT  Python Comments The hash symbol # comments out a single line. \u0026ldquo;\u0026rdquo;\u0026rdquo; Triple quotes allow multiple lines to be commented out. These are also known as docstrings. \u0026ldquo;\u0026rdquo;\u0026rdquo;\n"},{"idx":14,"href":"/docs/python-variables-types/","title":"Variables and Types","content":" Variables and Types Variables are reserved memory locations used to store values. Python has several basic data types that behave in ways that are similar to other programming languages. You do not need to declare variables before using them or declare their type. Every variable in Python is an object. Variables can hold any value and are case-sensitive. This tutorial will go over a few basic types of variables.\nVariable Names in Python There are a few rules governing the naming of variables:\n Variables can only contain letters, numbers, and underscores. Variable names can start with a letter or an underscore, but cannot start with a number. Reserved words or Python keywords cannot be used as variable names. There cannot be any spaces in a variable name. Spaces are not allowed in variable names, so we use underscores instead of spaces. For example, use car_wheel instead of \u0026ldquo;car wheel\u0026rdquo;.  Variable Assignment The equals sign = is used to assign values to variables\ncount = 100 # Assigning an integer value name = \u0026quot;Pat\u0026quot; # A string measure = 100.0 # A floating point value  Standard Data Types Python has five standard data types:  Number String List Tuple Dictionary \nPython Numbers Python supports four different numerical types:\nint (signed integers) long (long integers) float (floating point numbers) complex (complex numbers)  To define an integer, use the following syntax:\nmyinteger = 7  Python Strings Strings are created by enclosing a sequence of characters in single or double quotes. Strings are immutable i.e. they cannot be changed once they\u0026rsquo;ve been created. They can, however, have characters or other strings added to them. Creating strings is straightforward:\nmyString = 'Hello World!'  Subsets of strings can be extracted using the slice operator []. String indices start at 0 to string length - 1.\nstr[0] # Selects first character of the string str[2:5] # Selects characters from the 3rd to the 5th str[2:] # Selects characters from the 3rd until the end str + \u0026quot;TEST\u0026quot; # Concatenates two strings  Python Lists Lists are created using square brackets.\nmyList = ['apple', 'orange', 'pear']  Python Tuples Tuples are created using parentheses and are immutable i.e. they can\u0026rsquo;t be modified once they are assigned.\nmyTuple = (1, 2, 3)  Python Dictionaries Dictionaries are made up of a key and a value. They are created as follows:\nmyDict = {'Tom':4, 'Pat': 4, 'John': 7}  Python Sets A Set is unordered data type that is mutable, iterable, and has no duplicate elements and echoes the classical mathematical concept of a set.\nmySet = set([\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;])  Booleans Python implements all the usual operators associated with Boolean logic, but uses words rather than symbols\nt = True # Assigning True to t f = False # Assigning False to f t and f # Logical AND t or f # Logical OR not f # Logical NOT  "}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();